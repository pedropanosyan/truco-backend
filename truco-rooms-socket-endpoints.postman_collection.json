{
  "info": {
    "name": "Truco Rooms Socket.IO Endpoints",
    "description": "Socket.IO endpoints for Truco game room management using WebSocket requests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Connection & Setup",
      "item": [
        {
          "name": "Connect to Socket.IO Server",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Establish Socket.IO connection - automatically triggers 'connected' event"
          },
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ]
    },
    {
      "name": "Create Room Events",
      "item": [
        {
          "name": "Create Room - Valid Case",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"{{samplePlayerId}}\",\n  \"options\": {\n    \"maxPlayers\": 4,\n    \"betAmount\": 100\n  }\n}\n\nExpected Response: roomCreated event with room data"
          }
        },
        {
          "name": "Create Room - Minimum Players",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"player-456\",\n  \"options\": {\n    \"maxPlayers\": 2,\n    \"betAmount\": 50\n  }\n}\n\nCreate room with minimum players (2)"
          }
        },
        {
          "name": "Create Room - Maximum Players",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"player-789\",\n  \"options\": {\n    \"maxPlayers\": 6,\n    \"betAmount\": 500\n  }\n}\n\nCreate room with maximum players (6)"
          }
        },
        {
          "name": "Create Room - Zero Bet Amount",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"player-free\",\n  \"options\": {\n    \"maxPlayers\": 4,\n    \"betAmount\": 0\n  }\n}\n\nCreate room with zero bet amount (free game)"
          }
        },
        {
          "name": "Create Room - Player Already In Room (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"{{samplePlayerId}}\",\n  \"options\": {\n    \"maxPlayers\": 4,\n    \"betAmount\": 100\n  }\n}\n\nShould fail with PlayerAlreadyInRoomException"
          }
        },
        {
          "name": "Create Room - Invalid Player ID (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"nonexistent-player\",\n  \"options\": {\n    \"maxPlayers\": 4,\n    \"betAmount\": 100\n  }\n}\n\nShould fail with PlayerNotFoundException"
          }
        },
        {
          "name": "Create Room - Missing Options (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"player-incomplete\"\n}\n\nShould fail validation - missing options"
          }
        }
      ]
    },
    {
      "name": "Join Room Events",
      "item": [
        {
          "name": "Join Room - Valid Case",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: joinRoom\nData: {\n  \"roomId\": \"{{sampleRoomId}}\",\n  \"playerId\": \"player-456\"\n}\n\nExpected Response: roomUpdated event"
          }
        },
        {
          "name": "Join Room - Second Player",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: joinRoom\nData: {\n  \"roomId\": \"{{sampleRoomId}}\",\n  \"playerId\": \"player-789\"\n}\n\nSecond player joins the room"
          }
        },
        {
          "name": "Join Room - Third Player",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: joinRoom\nData: {\n  \"roomId\": \"{{sampleRoomId}}\",\n  \"playerId\": \"player-abc\"\n}\n\nThird player joins the room"
          }
        },
        {
          "name": "Join Room - Room Full (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: joinRoom\nData: {\n  \"roomId\": \"{{sampleRoomId}}\",\n  \"playerId\": \"player-overflow\"\n}\n\nShould fail with RoomFullException"
          }
        },
        {
          "name": "Join Room - Nonexistent Room (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: joinRoom\nData: {\n  \"roomId\": \"nonexistent-room-id\",\n  \"playerId\": \"player-456\"\n}\n\nShould fail with RoomNotFoundException"
          }
        },
        {
          "name": "Join Room - Player Already In Room (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: joinRoom\nData: {\n  \"roomId\": \"another-room-id\",\n  \"playerId\": \"player-456\"\n}\n\nShould fail with PlayerAlreadyInRoomException"
          }
        },
        {
          "name": "Join Room - Invalid Player ID (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: joinRoom\nData: {\n  \"roomId\": \"{{sampleRoomId}}\",\n  \"playerId\": \"invalid-player\"\n}\n\nShould fail with PlayerNotFoundException"
          }
        },
        {
          "name": "Join Room - Missing Player ID (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: joinRoom\nData: {\n  \"roomId\": \"{{sampleRoomId}}\"\n}\n\nShould fail validation - missing playerId"
          }
        }
      ]
    },
    {
      "name": "Leave Room Events",
      "item": [
        {
          "name": "Leave Room - Valid Case (Non-Owner)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: leaveRoom\nData: {\n  \"roomId\": \"{{sampleRoomId}}\",\n  \"playerId\": \"player-456\"\n}\n\nNon-owner leaves, room continues - returns LeaveRoomResponse"
          }
        },
        {
          "name": "Leave Room - Owner Leaves (Room Deleted)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: leaveRoom\nData: {\n  \"roomId\": \"{{sampleRoomId}}\",\n  \"playerId\": \"{{samplePlayerId}}\"\n}\n\nOwner leaves, room deleted - returns DeleteRoomResponse"
          }
        },
        {
          "name": "Leave Room - Last Player Leaves",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: leaveRoom\nData: {\n  \"roomId\": \"room-uuid-456\",\n  \"playerId\": \"player-solo\"\n}\n\nLast player leaves, room deleted - returns DeleteRoomResponse"
          }
        },
        {
          "name": "Leave Room - Player Not In Room (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: leaveRoom\nData: {\n  \"roomId\": \"{{sampleRoomId}}\",\n  \"playerId\": \"player-not-in-room\"\n}\n\nShould fail with PlayerNotInRoomException"
          }
        },
        {
          "name": "Leave Room - Nonexistent Room (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: leaveRoom\nData: {\n  \"roomId\": \"nonexistent-room\",\n  \"playerId\": \"player-456\"\n}\n\nShould fail with RoomNotFoundException"
          }
        },
        {
          "name": "Leave Room - Invalid Player ID (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: leaveRoom\nData: {\n  \"roomId\": \"{{sampleRoomId}}\",\n  \"playerId\": \"invalid-player\"\n}\n\nShould fail with PlayerNotFoundException"
          }
        },
        {
          "name": "Leave Room - Missing Room ID (Error)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: leaveRoom\nData: {\n  \"playerId\": \"player-456\"\n}\n\nShould fail validation - missing roomId"
          }
        }
      ]
    },
    {
      "name": "Server Event Listeners",
      "item": [
        {
          "name": "Listen - Connected Event",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Listen for: connected\nResponse: {\n  \"message\": \"Player connected\",\n  \"socketId\": \"socket-id\",\n  \"rooms\": [...]\n}\n\nTriggered automatically on connection"
          }
        },
        {
          "name": "Listen - Room Created Event",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Listen for: roomCreated\nResponse: {\n  \"id\": \"room-id\",\n  \"owner\": \"player-id\",\n  \"players\": [\"player-id\"],\n  \"maxPlayers\": 4,\n  \"status\": \"waiting\",\n  \"betAmount\": 100\n}\n\nTriggered when room is created"
          }
        },
        {
          "name": "Listen - Room Updated Event",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Listen for: roomUpdated\nResponse: {\n  \"roomId\": \"room-id\",\n  \"players\": [\"player1\", \"player2\"],\n  \"status\": \"waiting\"\n}\n\nTriggered when players join/leave"
          }
        },
        {
          "name": "Listen - Disconnected Event",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Listen for: disconnected\nResponse: {\n  \"message\": \"Player disconnected\",\n  \"socketId\": \"socket-id\"\n}\n\nTriggered when client disconnects"
          }
        },
        {
          "name": "Listen - Error Event",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Listen for: error\nResponse: Exception details\n\nTriggered when exceptions occur"
          }
        }
      ]
    },
    {
      "name": "Edge Cases & Error Scenarios",
      "item": [
        {
          "name": "Invalid Event Name",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: invalidEvent\nData: {\n  \"playerId\": \"{{samplePlayerId}}\"\n}\n\nShould be ignored or trigger error"
          }
        },
        {
          "name": "Malformed Data Types",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"{{samplePlayerId}}\",\n  \"options\": {\n    \"maxPlayers\": \"invalid-number\",\n    \"betAmount\": \"not-a-number\"\n  }\n}\n\nShould fail validation"
          }
        },
        {
          "name": "Empty Data Object",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {}\n\nShould fail validation"
          }
        },
        {
          "name": "Null Values",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: joinRoom\nData: {\n  \"roomId\": null,\n  \"playerId\": null\n}\n\nShould fail validation"
          }
        },
        {
          "name": "Very Long String Values",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"player-with-very-long-id-that-exceeds-normal-limits-and-might-cause-issues-with-storage-or-processing-systems-abcdefghijklmnopqrstuvwxyz1234567890\",\n  \"options\": {\n    \"maxPlayers\": 4,\n    \"betAmount\": 100\n  }\n}\n\nTest string length limits"
          }
        },
        {
          "name": "Negative Bet Amount",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"player-negative\",\n  \"options\": {\n    \"maxPlayers\": 4,\n    \"betAmount\": -100\n  }\n}\n\nShould fail validation"
          }
        },
        {
          "name": "Zero Max Players",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"player-zero\",\n  \"options\": {\n    \"maxPlayers\": 0,\n    \"betAmount\": 100\n  }\n}\n\nShould fail validation"
          }
        },
        {
          "name": "Excessive Max Players",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{wsUrl}}",
              "host": ["{{baseHost}}"],
              "port": "{{port}}"
            },
            "description": "Event: createRoom\nData: {\n  \"playerId\": \"player-excessive\",\n  \"options\": {\n    \"maxPlayers\": 1000,\n    \"betAmount\": 100\n  }\n}\n\nShould fail validation or be capped"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-generate unique player ID for testing",
          "if (!pm.collectionVariables.get('currentPlayerId')) {",
          "    const playerId = 'player-' + Date.now() + '-' + Math.floor(Math.random() * 1000);",
          "    pm.collectionVariables.set('currentPlayerId', playerId);",
          "    console.log('Generated player ID:', playerId);",
          "}",
          "",
          "// Auto-generate unique room ID for testing",
          "if (!pm.collectionVariables.get('currentRoomId')) {",
          "    const roomId = 'room-' + Date.now() + '-' + Math.floor(Math.random() * 1000);",
          "    pm.collectionVariables.set('currentRoomId', roomId);",
          "    console.log('Generated room ID:', roomId);",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Log request info for debugging",
          "console.log('=== Socket.IO Request Info ===');",
          "console.log('URL:', pm.request.url.toString());",
          "console.log('Description:', pm.request.description);",
          "",
          "// Extract event and data from description",
          "const description = pm.request.description || '';",
          "const eventMatch = description.match(/Event:\\s*(\\w+)/);",
          "const dataMatch = description.match(/Data:\\s*({[\\s\\S]*?})\\n/);",
          "",
          "if (eventMatch) {",
          "    console.log('Event:', eventMatch[1]);",
          "}",
          "",
          "if (dataMatch) {",
          "    try {",
          "        const data = JSON.parse(dataMatch[1]);",
          "        console.log('Data:', JSON.stringify(data, null, 2));",
          "    } catch (e) {",
          "        console.log('Data (raw):', dataMatch[1]);",
          "    }",
          "}",
          "",
          "// Basic connection test",
          "pm.test('WebSocket connection possible', function () {",
          "    pm.expect(pm.request.url.toString()).to.include(pm.collectionVariables.get('wsUrl'));",
          "});",
          "",
          "console.log('=== End Request Info ===');",
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string",
      "description": "HTTP base URL for the server"
    },
    {
      "key": "wsUrl",
      "value": "ws://localhost:3000",
      "type": "string",
      "description": "WebSocket URL for Socket.IO connection"
    },
    {
      "key": "baseHost",
      "value": "localhost",
      "type": "string",
      "description": "Server hostname"
    },
    {
      "key": "port",
      "value": "3000",
      "type": "string",
      "description": "Server port"
    },
    {
      "key": "sampleRoomId",
      "value": "room-uuid-123",
      "type": "string",
      "description": "Sample room ID for testing"
    },
    {
      "key": "samplePlayerId",
      "value": "player-123",
      "type": "string",
      "description": "Sample player ID for testing"
    },
    {
      "key": "currentPlayerId",
      "value": "",
      "type": "string",
      "description": "Auto-generated unique player ID"
    },
    {
      "key": "currentRoomId",
      "value": "",
      "type": "string",
      "description": "Auto-generated unique room ID"
    }
  ]
}
